{"version":3,"sources":["../../src/commands/build.js"],"names":["path","require","report","buildHTML","buildProductionBundle","bootstrap","apiRunnerNode","copyStaticDirs","initTracer","stopTracer","db","signalExit","telemetry","store","emitter","queryUtil","appDataUtil","WorkerPool","structureWebpackErrors","waitUntilAllJobsComplete","waitUntilAllJobsV2Complete","jobsV1Promise","Promise","resolve","onEndJob","getState","jobs","active","length","off","on","all","then","module","exports","build","program","publicDir","join","directory","openTracingConfigFile","buildActivity","phantomActivity","start","trackCli","exitCode","buildSpan","span","setTag","graphqlRunner","parentSpan","processPageQueries","processStaticQueries","getInitialQueryProcessors","graphql","activity","activityTimer","stats","catch","err","panic","end","workerPool","create","webpackCompilationHash","hash","exists","dispatch","type","payload","write","isTrackingEnabled","bundleSizes","toJson","assets","filter","asset","name","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","boundActionCreators","setProgramStatus","saveState","pagePaths","pages","keys","createProgress","buildPages","stage","id","context","errorPath","match","message","ref","error","done","info","process","uptime","finish"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst path = require(`path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst buildHTML = require(`./build-html`)\nconst buildProductionBundle = require(`./build-javascript`)\nconst bootstrap = require(`../bootstrap`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { copyStaticDirs } = require(`../utils/get-static-dir`)\nconst { initTracer, stopTracer } = require(`../utils/tracer`)\nconst db = require(`../db`)\nconst signalExit = require(`signal-exit`)\nconst telemetry = require(`gatsby-telemetry`)\nconst { store, emitter } = require(`../redux`)\nconst queryUtil = require(`../query`)\nconst appDataUtil = require(`../utils/app-data`)\nconst WorkerPool = require(`../utils/worker/pool`)\nconst { structureWebpackErrors } = require(`../utils/webpack-error-utils`)\nconst {\n  waitUntilAllJobsComplete: waitUntilAllJobsV2Complete,\n} = require(`../utils/jobs-manager`)\n\ntype BuildArgs = {\n  directory: string,\n  sitePackageJson: object,\n  prefixPaths: boolean,\n  noUglify: boolean,\n  openTracingConfigFile: string,\n}\n\nconst waitUntilAllJobsComplete = () => {\n  const jobsV1Promise = new Promise(resolve => {\n    const onEndJob = () => {\n      if (store.getState().jobs.active.length === 0) {\n        resolve()\n        emitter.off(`END_JOB`, onEndJob)\n      }\n    }\n    emitter.on(`END_JOB`, onEndJob)\n    onEndJob()\n  })\n\n  return Promise.all([\n    jobsV1Promise,\n    waitUntilAllJobsV2Complete(),\n  ]).then(() => {})\n}\n\nmodule.exports = async function build(program: BuildArgs) {\n  const publicDir = path.join(program.directory, `public`)\n  initTracer(program.openTracingConfigFile)\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, { exitCode })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  const { graphqlRunner } = await bootstrap({\n    ...program,\n    parentSpan: buildSpan,\n  })\n\n  const {\n    processPageQueries,\n    processStaticQueries,\n  } = queryUtil.getInitialQueryProcessors({\n    parentSpan: buildSpan,\n  })\n\n  await processStaticQueries()\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: graphqlRunner,\n    parentSpan: buildSpan,\n  })\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  let activity = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  activity.start()\n  const stats = await buildProductionBundle(program, {\n    parentSpan: activity.span,\n  }).catch(err => {\n    activity.panic(structureWebpackErrors(`build-javascript`, err))\n  })\n  activity.end()\n\n  const workerPool = WorkerPool.create()\n\n  const webpackCompilationHash = stats.hash\n  if (\n    webpackCompilationHash !== store.getState().webpackCompilationHash ||\n    !appDataUtil.exists(publicDir)\n  ) {\n    store.dispatch({\n      type: `SET_WEBPACK_COMPILATION_HASH`,\n      payload: webpackCompilationHash,\n    })\n\n    activity = report.activityTimer(`Rewriting compilation hashes`, {\n      parentSpan: buildSpan,\n    })\n    activity.start()\n\n    await appDataUtil.write(publicDir, webpackCompilationHash)\n\n    activity.end()\n  }\n\n  await processPageQueries()\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = stats\n      .toJson({ assets: true })\n      .assets.filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n    })\n  }\n\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_QUERY_RUNNING_FINISHED`\n  )\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  const pagePaths = [...store.getState().pages.keys()]\n  activity = report.createProgress(\n    `Building static HTML for pages`,\n    pagePaths.length,\n    0,\n    {\n      parentSpan: buildSpan,\n    }\n  )\n  activity.start()\n  try {\n    await buildHTML.buildPages({\n      program,\n      stage: `build-html`,\n      pagePaths,\n      activity,\n      workerPool,\n    })\n  } catch (err) {\n    let id = `95313` // TODO: verify error IDs exist\n    const context = {\n      errorPath: err.context && err.context.path,\n    }\n\n    const match = err.message.match(\n      /ReferenceError: (window|document|localStorage|navigator|alert|location) is not defined/i\n    )\n    if (match && match[1]) {\n      id = `95312`\n      context.ref = match[1]\n    }\n\n    activity.panic({\n      id,\n      context,\n      error: err,\n    })\n  }\n  activity.done()\n\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: graphqlRunner,\n    parentSpan: buildSpan,\n  })\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildSpan.finish()\n  await stopTracer()\n  workerPool.end()\n  buildActivity.end()\n}\n"],"file":"build.js"}