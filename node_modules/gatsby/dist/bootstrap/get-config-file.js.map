{"version":3,"sources":["../../src/bootstrap/get-config-file.js"],"names":["levenshtein","require","fs","testRequireError","default","report","path","existsSync","sync","isNearMatch","fileName","configName","distance","get","module","exports","getConfigFile","rootDir","configPath","join","configModule","configFilePath","resolve","err","nearMatch","readdir","then","files","find","file","split","pop","panic","id","error","context","message"],"mappings":";;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAE,kBAAF,CAA3B;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAE,6BAAF,CAAP,CAAuCG,OAAhE;;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAAE,yBAAF,CAAtB;;AACA,MAAMK,IAAI,GAAGL,OAAO,CAAE,MAAF,CAApB;;AACA,MAAMM,UAAU,GAAGN,OAAO,CAAE,kBAAF,CAAP,CAA4BO,IAA/C;;AAEA,SAASC,WAAT,CACEC,QADF,EAEEC,UAFF,EAGEC,QAHF,EAIW;AACT,SAAOZ,WAAW,CAACa,GAAZ,CAAgBH,QAAhB,EAA0BC,UAA1B,KAAyCC,QAAhD;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB,eAAeC,aAAf,CACfC,OADe,EAEfN,UAFe,EAGfC,QAAgB,GAAG,CAHJ,EAIf;AACA,QAAMM,UAAU,GAAGZ,IAAI,CAACa,IAAL,CAAUF,OAAV,EAAmBN,UAAnB,CAAnB;AACA,MAAIS,YAAJ,EAAkBC,cAAlB;;AACA,MAAI;AACFA,IAAAA,cAAc,GAAGpB,OAAO,CAACqB,OAAR,CAAgBJ,UAAhB,CAAjB;AACAE,IAAAA,YAAY,GAAGnB,OAAO,CAACoB,cAAD,CAAtB;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY;AACZ,UAAMC,SAAS,GAAG,MAAMtB,EAAE,CAACuB,OAAH,CAAWR,OAAX,EAAoBS,IAApB,CAAyBC,KAAK,IACpDA,KAAK,CAACC,IAAN,CAAWC,IAAI,IAAI;AACjB,YAAMnB,QAAQ,GAAGmB,IAAI,CAACC,KAAL,CAAWb,OAAX,EAAoBc,GAApB,EAAjB;AACA,aAAOtB,WAAW,CAACC,QAAD,EAAWC,UAAX,EAAuBC,QAAvB,CAAlB;AACD,KAHD,CADsB,CAAxB;;AAMA,QAAI,CAACT,gBAAgB,CAACe,UAAD,EAAaK,GAAb,CAArB,EAAwC;AACtClB,MAAAA,MAAM,CAAC2B,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXC,QAAAA,KAAK,EAAEX,GAFI;AAGXY,QAAAA,OAAO,EAAE;AACPxB,UAAAA,UADO;AAEPyB,UAAAA,OAAO,EAAEb,GAAG,CAACa;AAFN;AAHE,OAAb;AAQD,KATD,MASO,IAAIZ,SAAJ,EAAe;AACpBnB,MAAAA,MAAM,CAAC2B,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXC,QAAAA,KAAK,EAAEX,GAFI;AAGXY,QAAAA,OAAO,EAAE;AACPxB,UAAAA,UADO;AAEPa,UAAAA;AAFO;AAHE,OAAb;AAQD,KATM,MASA,IAAIjB,UAAU,CAACD,IAAI,CAACa,IAAL,CAAUF,OAAV,EAAoB,KAApB,EAA0BN,UAAU,GAAI,KAAxC,CAAD,CAAd,EAA+D;AACpEN,MAAAA,MAAM,CAAC2B,KAAP,CAAa;AACXC,QAAAA,EAAE,EAAG,OADM;AAEXE,QAAAA,OAAO,EAAE;AACPxB,UAAAA;AADO;AAFE,OAAb;AAMD;AACF;;AAED,SAAO;AAAES,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CA9CD","sourcesContent":["/* @flow */\nconst levenshtein = require(`fast-levenshtein`)\nconst fs = require(`fs-extra`)\nconst testRequireError = require(`../utils/test-require-error`).default\nconst report = require(`gatsby-cli/lib/reporter`)\nconst path = require(`path`)\nconst existsSync = require(`fs-exists-cached`).sync\n\nfunction isNearMatch(\n  fileName: string,\n  configName: string,\n  distance: number\n): boolean {\n  return levenshtein.get(fileName, configName) <= distance\n}\n\nmodule.exports = async function getConfigFile(\n  rootDir: string,\n  configName: string,\n  distance: number = 3\n) {\n  const configPath = path.join(rootDir, configName)\n  let configModule, configFilePath\n  try {\n    configFilePath = require.resolve(configPath)\n    configModule = require(configFilePath)\n  } catch (err) {\n    const nearMatch = await fs.readdir(rootDir).then(files =>\n      files.find(file => {\n        const fileName = file.split(rootDir).pop()\n        return isNearMatch(fileName, configName, distance)\n      })\n    )\n    if (!testRequireError(configPath, err)) {\n      report.panic({\n        id: `10123`,\n        error: err,\n        context: {\n          configName,\n          message: err.message,\n        },\n      })\n    } else if (nearMatch) {\n      report.panic({\n        id: `10124`,\n        error: err,\n        context: {\n          configName,\n          nearMatch,\n        },\n      })\n    } else if (existsSync(path.join(rootDir, `src`, configName + `.js`))) {\n      report.panic({\n        id: `10125`,\n        context: {\n          configName,\n        },\n      })\n    }\n  }\n\n  return { configModule, configFilePath }\n}\n"],"file":"get-config-file.js"}