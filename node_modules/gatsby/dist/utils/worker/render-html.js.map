{"version":3,"sources":["../../../src/utils/worker/render-html.js"],"names":["fs","require","path","Promise","generatePathToOutput","outputPath","outputFileName","replace","test","join","process","cwd","renderHTML","htmlComponentRendererPath","paths","envVars","forEach","key","value","env","map","resolve","reject","htmlComponentRenderer","default","throwAway","htmlString","outputFile","e","context"],"mappings":";;;;;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAE,MAAF,CAApB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAE,UAAF,CAAvB,C,CAEA;;;AACA,MAAMG,oBAAoB,GAAGC,UAAU,IAAI;AACzC,MAAIC,cAAc,GAAGD,UAAU,CAACE,OAAX,CAAmB,UAAnB,EAAgC,EAAhC,CAArB,CADyC,CACe;;AAExD,MAAI,CAAC,cAAcC,IAAd,CAAmBF,cAAnB,CAAL,EAAyC;AACvCA,IAAAA,cAAc,GAAGJ,IAAI,CAACO,IAAL,CAAUH,cAAV,EAA2B,YAA3B,CAAjB;AACD;;AAED,SAAOJ,IAAI,CAACO,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAA0B,QAA1B,EAAmCL,cAAnC,CAAP;AACD,CARD;;AAUO,SAASM,UAAT,CAAoB;AAAEC,EAAAA,yBAAF;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAApB,EAAmE;AACxE;AACA;AACAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAmBR,OAAO,CAACS,GAAR,CAAYF,GAAZ,IAAmBC,KAAtD;AAEA,SAAOf,OAAO,CAACiB,GAAR,CACLN,KADK,EAELZ,IAAI,IACF,IAAIC,OAAJ,CAAY,CAACkB,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAMC,qBAAqB,GAAGtB,OAAO,CAACY,yBAAD,CAArC;;AACA,QAAI;AACFU,MAAAA,qBAAqB,CAACC,OAAtB,CAA8BtB,IAA9B,EAAoC,CAACuB,SAAD,EAAYC,UAAZ,KAA2B;AAC7DL,QAAAA,OAAO,CAACrB,EAAE,CAAC2B,UAAH,CAAcvB,oBAAoB,CAACF,IAAD,CAAlC,EAA0CwB,UAA1C,CAAD,CAAP;AACD,OAFD;AAGD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACV;AACAA,MAAAA,CAAC,CAACC,OAAF,GAAY;AACV3B,QAAAA;AADU,OAAZ;AAGAoB,MAAAA,MAAM,CAACM,CAAD,CAAN;AACD;AACF,GAbD,CAHG,CAAP;AAkBD","sourcesContent":["const fs = require(`fs-extra`)\nconst path = require(`path`)\nconst Promise = require(`bluebird`)\n\n// copied from https://github.com/markdalgleish/static-site-generator-webpack-plugin/blob/master/index.js#L161\nconst generatePathToOutput = outputPath => {\n  let outputFileName = outputPath.replace(/^(\\/|\\\\)/, ``) // Remove leading slashes for webpack-dev-server\n\n  if (!/\\.(html?)$/i.test(outputFileName)) {\n    outputFileName = path.join(outputFileName, `index.html`)\n  }\n\n  return path.join(process.cwd(), `public`, outputFileName)\n}\n\nexport function renderHTML({ htmlComponentRendererPath, paths, envVars }) {\n  // This is being executed in child process, so we need to set some vars\n  // for modules that aren't bundled by webpack.\n  envVars.forEach(([key, value]) => (process.env[key] = value))\n\n  return Promise.map(\n    paths,\n    path =>\n      new Promise((resolve, reject) => {\n        const htmlComponentRenderer = require(htmlComponentRendererPath)\n        try {\n          htmlComponentRenderer.default(path, (throwAway, htmlString) => {\n            resolve(fs.outputFile(generatePathToOutput(path), htmlString))\n          })\n        } catch (e) {\n          // add some context to error so we can display more helpful message\n          e.context = {\n            path,\n          }\n          reject(e)\n        }\n      })\n  )\n}\n"],"file":"render-html.js"}