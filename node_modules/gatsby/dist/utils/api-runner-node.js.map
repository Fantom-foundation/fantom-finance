{"version":3,"sources":["../../src/utils/api-runner-node.js"],"names":["Promise","require","_","chalk","bindActionCreators","tracer","globalTracer","reporter","stackTrace","codeFrameColumns","fs","getCache","createNodeId","createContentDigest","buildObjectType","buildUnionType","buildInterfaceType","buildInputObjectType","buildEnumType","buildScalarType","emitter","store","getPublicPath","getNonGatsbyCodeFrameFormatted","trackBuildError","decorateEvent","default","errorParser","boundPluginActionCreators","doubleBind","boundActionCreators","api","plugin","actionOptions","traceId","name","keys","Object","doubleBoundActionCreators","i","length","key","boundActionCreator","args","undefined","initAPICallTracing","parentSpan","startSpan","spanName","spanArgs","defaultSpanArgs","childOf","merge","getLocalReporter","activity","panicOnBuild","bind","runAPI","gatsbyNode","resolve","spanOptions","pluginSpan","setTag","loadNodeContent","getNodes","getNode","getNodesByType","hasNodeChanged","getNodeAndSavePathDependency","publicActions","restrictedActionsAvailableInAPI","availableActions","dispatch","config","program","getState","pathPrefix","prefixPaths","publicPath","namespacedCreateNodeId","id","tracing","cache","actions","apiFinished","alreadyDisplayed","createPageAction","createPage","warning","stripIndent","bold","possiblyCodeFrame","push","warn","join","localReporter","apiCallArgs","basePath","schema","pluginOptions","fromCallback","callback","cb","err","val","finish","e","error","pluginName","version","result","then","res","apisRunningById","Map","apisRunningByTraceId","waitingForCasacadeToFinish","module","exports","pluginSource","traceTags","waitForCascadingActions","apiSpanArgs","apiSpan","forEach","value","plugins","flattenedPlugins","implementingPlugins","filter","nodeAPIs","includes","apiRunInstance","span","startTime","Date","toJSON","type","node","internal","contentDigest","filename","page","path","argsJson","JSON","stringify","omit","size","emit","set","has","currentCount","get","stopQueuedApiRuns","onAPIRunComplete","actionHandler","action","payload","on","off","mapSeries","catch","file","parse","find","test","fileName","codeFrame","structuredError","lineNumber","line","columnNumber","column","code","readFileSync","encoding","start","highlightCode","location","filePath","context","results","delete","isEmpty","instance","apisByTraceIdCount"],"mappings":"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","sourcesContent":["const Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chalk = require(`chalk`)\nconst { bindActionCreators } = require(`redux`)\n\nconst tracer = require(`opentracing`).globalTracer()\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst stackTrace = require(`stack-trace`)\nconst { codeFrameColumns } = require(`@babel/code-frame`)\nconst fs = require(`fs-extra`)\nconst getCache = require(`./get-cache`)\nconst createNodeId = require(`./create-node-id`)\nconst { createContentDigest } = require(`gatsby-core-utils`)\nconst {\n  buildObjectType,\n  buildUnionType,\n  buildInterfaceType,\n  buildInputObjectType,\n  buildEnumType,\n  buildScalarType,\n} = require(`../schema/types/type-builders`)\nconst { emitter, store } = require(`../redux`)\nconst getPublicPath = require(`./get-public-path`)\nconst { getNonGatsbyCodeFrameFormatted } = require(`./stack-trace-utils`)\nconst { trackBuildError, decorateEvent } = require(`gatsby-telemetry`)\nconst { default: errorParser } = require(`./api-runner-error-parser`)\n\n// Bind action creators per plugin so we can auto-add\n// metadata to actions they create.\nconst boundPluginActionCreators = {}\nconst doubleBind = (boundActionCreators, api, plugin, actionOptions) => {\n  const { traceId } = actionOptions\n  if (boundPluginActionCreators[plugin.name + api + traceId]) {\n    return boundPluginActionCreators[plugin.name + api + traceId]\n  } else {\n    const keys = Object.keys(boundActionCreators)\n    const doubleBoundActionCreators = {}\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const boundActionCreator = boundActionCreators[key]\n      if (typeof boundActionCreator === `function`) {\n        doubleBoundActionCreators[key] = (...args) => {\n          // Let action callers override who the plugin is. Shouldn't be\n          // used that often.\n          if (args.length === 1) {\n            return boundActionCreator(args[0], plugin, actionOptions)\n          } else if (args.length === 2) {\n            return boundActionCreator(args[0], args[1], actionOptions)\n          }\n          return undefined\n        }\n      }\n    }\n    boundPluginActionCreators[\n      plugin.name + api + traceId\n    ] = doubleBoundActionCreators\n    return doubleBoundActionCreators\n  }\n}\n\nconst initAPICallTracing = parentSpan => {\n  const startSpan = (spanName, spanArgs = {}) => {\n    const defaultSpanArgs = { childOf: parentSpan }\n\n    return tracer.startSpan(spanName, _.merge(defaultSpanArgs, spanArgs))\n  }\n\n  return {\n    tracer,\n    parentSpan,\n    startSpan,\n  }\n}\n\nconst getLocalReporter = (activity, reporter) =>\n  activity\n    ? { ...reporter, panicOnBuild: activity.panicOnBuild.bind(activity) }\n    : reporter\n\nconst runAPI = (plugin, api, args, activity) => {\n  const gatsbyNode = require(`${plugin.resolve}/gatsby-node`)\n  if (gatsbyNode[api]) {\n    const parentSpan = args && args.parentSpan\n    const spanOptions = parentSpan ? { childOf: parentSpan } : {}\n    const pluginSpan = tracer.startSpan(`run-plugin`, spanOptions)\n\n    pluginSpan.setTag(`api`, api)\n    pluginSpan.setTag(`plugin`, plugin.name)\n\n    const {\n      loadNodeContent,\n      getNodes,\n      getNode,\n      getNodesByType,\n      hasNodeChanged,\n      getNodeAndSavePathDependency,\n    } = require(`../db/nodes`)\n    const {\n      publicActions,\n      restrictedActionsAvailableInAPI,\n    } = require(`../redux/actions`)\n    const availableActions = {\n      ...publicActions,\n      ...(restrictedActionsAvailableInAPI[api] || {}),\n    }\n    const boundActionCreators = bindActionCreators(\n      availableActions,\n      store.dispatch\n    )\n    const doubleBoundActionCreators = doubleBind(\n      boundActionCreators,\n      api,\n      plugin,\n      { ...args, parentSpan: pluginSpan, activity }\n    )\n\n    const { config, program } = store.getState()\n\n    const pathPrefix = (program.prefixPaths && config.pathPrefix) || ``\n    const publicPath = getPublicPath({ ...config, ...program }, ``)\n\n    const namespacedCreateNodeId = id => createNodeId(id, plugin.name)\n\n    const tracing = initAPICallTracing(pluginSpan)\n\n    const cache = getCache(plugin.name)\n\n    // Ideally this would be more abstracted and applied to more situations, but right now\n    // this can be potentially breaking so targeting `createPages` API and `createPage` action\n    let actions = doubleBoundActionCreators\n    let apiFinished = false\n    if (api === `createPages`) {\n      let alreadyDisplayed = false\n      const createPageAction = actions.createPage\n      // create new actions object with wrapped createPage action\n      // doubleBoundActionCreators is memoized, so we can't just\n      // reassign createPage field as this would cause this extra logic\n      // to be used in subsequent APIs and we only want to target this `createPages` call.\n      actions = {\n        ...actions,\n        createPage: (...args) => {\n          createPageAction(...args)\n          if (apiFinished && !alreadyDisplayed) {\n            const warning = [\n              reporter.stripIndent(`\n              Action ${chalk.bold(\n                `createPage`\n              )} was called outside of its expected asynchronous lifecycle ${chalk.bold(\n                `createPages`\n              )} in ${chalk.bold(plugin.name)}.\n              Ensure that you return a Promise from ${chalk.bold(\n                `createPages`\n              )} and are awaiting any asynchronous method invocations (like ${chalk.bold(\n                `graphql`\n              )} or http requests).\n              For more info and debugging tips: see ${chalk.bold(\n                `https://gatsby.dev/sync-actions`\n              )}\n            `),\n            ]\n\n            const possiblyCodeFrame = getNonGatsbyCodeFrameFormatted()\n            if (possiblyCodeFrame) {\n              warning.push(possiblyCodeFrame)\n            }\n\n            reporter.warn(warning.join(`\\n\\n`))\n            alreadyDisplayed = true\n          }\n        },\n      }\n    }\n    let localReporter = getLocalReporter(activity, reporter)\n\n    const apiCallArgs = [\n      {\n        ...args,\n        basePath: pathPrefix,\n        pathPrefix: publicPath,\n        boundActionCreators: actions,\n        actions,\n        loadNodeContent,\n        store,\n        emitter,\n        getCache,\n        getNodes,\n        getNode,\n        getNodesByType,\n        hasNodeChanged,\n        reporter: localReporter,\n        getNodeAndSavePathDependency,\n        cache,\n        createNodeId: namespacedCreateNodeId,\n        createContentDigest,\n        tracing,\n        schema: {\n          buildObjectType,\n          buildUnionType,\n          buildInterfaceType,\n          buildInputObjectType,\n          buildEnumType,\n          buildScalarType,\n        },\n      },\n      plugin.pluginOptions,\n    ]\n\n    // If the plugin is using a callback use that otherwise\n    // expect a Promise to be returned.\n    if (gatsbyNode[api].length === 3) {\n      return Promise.fromCallback(callback => {\n        const cb = (err, val) => {\n          pluginSpan.finish()\n          callback(err, val)\n          apiFinished = true\n        }\n\n        try {\n          gatsbyNode[api](...apiCallArgs, cb)\n        } catch (e) {\n          trackBuildError(api, {\n            error: e,\n            pluginName: `${plugin.name}@${plugin.version}`,\n          })\n          throw e\n        }\n      })\n    } else {\n      const result = gatsbyNode[api](...apiCallArgs)\n      pluginSpan.finish()\n      return Promise.resolve(result).then(res => {\n        apiFinished = true\n        return res\n      })\n    }\n  }\n\n  return null\n}\n\nlet apisRunningById = new Map()\nlet apisRunningByTraceId = new Map()\nlet waitingForCasacadeToFinish = []\n\nmodule.exports = async (api, args = {}, { pluginSource, activity } = {}) =>\n  new Promise(resolve => {\n    const { parentSpan, traceId, traceTags, waitForCascadingActions } = args\n    const apiSpanArgs = parentSpan ? { childOf: parentSpan } : {}\n    const apiSpan = tracer.startSpan(`run-api`, apiSpanArgs)\n\n    apiSpan.setTag(`api`, api)\n    _.forEach(traceTags, (value, key) => {\n      apiSpan.setTag(key, value)\n    })\n\n    const plugins = store.getState().flattenedPlugins\n\n    // Get the list of plugins that implement this API.\n    // Also: Break infinite loops. Sometimes a plugin will implement an API and\n    // call an action which will trigger the same API being called.\n    // `onCreatePage` is the only example right now. In these cases, we should\n    // avoid calling the originating plugin again.\n    const implementingPlugins = plugins.filter(\n      plugin => plugin.nodeAPIs.includes(api) && plugin.name !== pluginSource\n    )\n\n    const apiRunInstance = {\n      api,\n      args,\n      pluginSource,\n      resolve,\n      span: apiSpan,\n      startTime: new Date().toJSON(),\n      traceId,\n    }\n\n    // Generate IDs for api runs. Most IDs we generate from the args\n    // but some API calls can have very large argument objects so we\n    // have special ways of generating IDs for those to avoid stringifying\n    // large objects.\n    let id\n    if (api === `setFieldsOnGraphQLNodeType`) {\n      id = `${api}${apiRunInstance.startTime}${args.type.name}${traceId}`\n    } else if (api === `onCreateNode`) {\n      id = `${api}${apiRunInstance.startTime}${args.node.internal.contentDigest}${traceId}`\n    } else if (api === `preprocessSource`) {\n      id = `${api}${apiRunInstance.startTime}${args.filename}${traceId}`\n    } else if (api === `onCreatePage`) {\n      id = `${api}${apiRunInstance.startTime}${args.page.path}${traceId}`\n    } else {\n      // When tracing is turned on, the `args` object will have a\n      // `parentSpan` field that can be quite large. So we omit it\n      // before calling stringify\n      const argsJson = JSON.stringify(_.omit(args, `parentSpan`))\n      id = `${api}|${apiRunInstance.startTime}|${apiRunInstance.traceId}|${argsJson}`\n    }\n    apiRunInstance.id = id\n\n    if (waitForCascadingActions) {\n      waitingForCasacadeToFinish.push(apiRunInstance)\n    }\n\n    if (apisRunningById.size === 0) {\n      emitter.emit(`API_RUNNING_START`)\n    }\n\n    apisRunningById.set(apiRunInstance.id, apiRunInstance)\n    if (apisRunningByTraceId.has(apiRunInstance.traceId)) {\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount + 1)\n    } else {\n      apisRunningByTraceId.set(apiRunInstance.traceId, 1)\n    }\n\n    let stopQueuedApiRuns = false\n    let onAPIRunComplete = null\n    if (api === `onCreatePage`) {\n      const path = args.page.path\n      const actionHandler = action => {\n        if (action.payload.path === path) {\n          stopQueuedApiRuns = true\n        }\n      }\n      emitter.on(`DELETE_PAGE`, actionHandler)\n      onAPIRunComplete = () => {\n        emitter.off(`DELETE_PAGE`, actionHandler)\n      }\n    }\n\n    Promise.mapSeries(implementingPlugins, plugin => {\n      if (stopQueuedApiRuns) {\n        return null\n      }\n\n      let pluginName =\n        plugin.name === `default-site-plugin` ? `gatsby-node.js` : plugin.name\n\n      return new Promise(resolve => {\n        resolve(runAPI(plugin, api, { ...args, parentSpan: apiSpan }, activity))\n      }).catch(err => {\n        decorateEvent(`BUILD_PANIC`, {\n          pluginName: `${plugin.name}@${plugin.version}`,\n        })\n\n        let localReporter = getLocalReporter(activity, reporter)\n\n        const file = stackTrace\n          .parse(err)\n          .find(file => /gatsby-node/.test(file.fileName))\n\n        let codeFrame = ``\n        const structuredError = errorParser({ err })\n\n        if (file) {\n          const { fileName, lineNumber: line, columnNumber: column } = file\n\n          const code = fs.readFileSync(fileName, { encoding: `utf-8` })\n          codeFrame = codeFrameColumns(\n            code,\n            {\n              start: {\n                line,\n                column,\n              },\n            },\n            {\n              highlightCode: true,\n            }\n          )\n\n          structuredError.location = {\n            start: { line: line, column: column },\n          }\n          structuredError.filePath = fileName\n        }\n\n        structuredError.context = {\n          ...structuredError.context,\n          pluginName,\n          api,\n          codeFrame,\n        }\n\n        localReporter.panicOnBuild(structuredError)\n\n        return null\n      })\n    }).then(results => {\n      if (onAPIRunComplete) {\n        onAPIRunComplete()\n      }\n      // Remove runner instance\n      apisRunningById.delete(apiRunInstance.id)\n      const currentCount = apisRunningByTraceId.get(apiRunInstance.traceId)\n      apisRunningByTraceId.set(apiRunInstance.traceId, currentCount - 1)\n\n      if (apisRunningById.size === 0) {\n        emitter.emit(`API_RUNNING_QUEUE_EMPTY`)\n      }\n\n      // Filter empty results\n      apiRunInstance.results = results.filter(result => !_.isEmpty(result))\n\n      // Filter out empty responses and return if the\n      // api caller isn't waiting for cascading actions to finish.\n      if (!waitForCascadingActions) {\n        apiSpan.finish()\n        resolve(apiRunInstance.results)\n      }\n\n      // Check if any of our waiters are done.\n      waitingForCasacadeToFinish = waitingForCasacadeToFinish.filter(\n        instance => {\n          // If none of its trace IDs are running, it's done.\n          const apisByTraceIdCount = apisRunningByTraceId.get(instance.traceId)\n          if (apisByTraceIdCount === 0) {\n            instance.span.finish()\n            instance.resolve(instance.results)\n            return false\n          } else {\n            return true\n          }\n        }\n      )\n      return\n    })\n  })\n"],"file":"api-runner-node.js"}